import java.io.*; 
import java.util.*; 
class Main {
    static int partition(int arr[], int low, int high) 
    { 
        int pivot = arr[high];  
        int i = (low-1);
        for (int j=low; j<high; j++) 
        {  
            if (arr[j] <= pivot) 
            { 
                i++; 
                int temp = arr[i]; 
                arr[i] = arr[j]; 
                arr[j] = temp; 
            } 
        } 
        int temp = arr[i+1]; 
        arr[i+1] = arr[high]; 
        arr[high] = temp; 
  
        return i+1; 
    } 
    static void quicksort(int arr[], int low, int high) 
    { 
        if (low < high) 
        { 
            int pi = partition(arr, low, high); 
            quicksort(arr, low, pi-1); 
            quicksort(arr, pi+1, high); 
        } 
    } 
	public static void main (String[] args) throws IOException{
		BufferedReader sc=new BufferedReader(new InputStreamReader(System.in));
		int n=Integer.parseInt(sc.readLine());
		String[] str=sc.readLine().split(" ");
		int[] arr=new int[n];
		for(int i=0;i<n;i++)
		{
			arr[i]=Integer.parseInt(str[i]);
		}			
		int sum, minsum=Integer.MAX_VALUE;
        int low=0, high=n-1;
        quicksort(arr, low, high);
        while(low<high) 
      { 
        sum = arr[low] + arr[high]; 
        if(Math.abs(sum) < Math.abs(minsum)) 
        { 
          minsum = sum; 
        } 
        if(sum < 0) 
          low++; 
        else
          high--; 
      } 
		System.out.println(minsum); 
	}

}
